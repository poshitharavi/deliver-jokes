options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Authenticate with Google Cloud (optional, but recommended)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud auth configure-docker

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/deliver-jokes:$COMMIT_SHA', '.']

  # Step 3: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/deliver-jokes:$COMMIT_SHA']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'deliver-jokes'
      - '--image'
      - 'gcr.io/$PROJECT_ID/deliver-jokes:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
       - '--set-env-vars=DATABASE_URL=mysql://testUser:8n{sg&oHaD6Ch@localhost/jokes?host=/cloudsql/jokeinterview:us-central1:jokeinstance'
      - '--allow-unauthenticated'
substitutions:
  _SERVICE_NAME: deliver-jokes
  _REGION: us-central1
  _INSTANCE_CONNECTION_NAME: jokeinstance
  _DB_USER: testUser
  _DB_PASSWORD: 8n{sg&oHaD6Ch
  _DB_NAME: jokes
images:
  - 'gcr.io/$PROJECT_ID/deliver-jokes:$COMMIT_SHA'

serviceAccount: '502810113594-compute@developer.gserviceaccount.com'
